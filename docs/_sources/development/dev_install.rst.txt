.. _dev_install:

********************
Development Workflow
********************

To install Sarkas you first need to download the source code from its GitHub repository_.
It is highly recommended to fork Sarkas repo for any code development. This is to ensure that your code changes
do not conflict with Sarkas master branch.

Downloading Sarkas
==================

Forking and Cloning Sarkas repository
-------------------------------------
The instructions that follow are a copy of those found in the Github help fork_ page. If you have problems cloning
the repository please visit the fork_ page.

A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without
affecting the original project.

#. Navigate to the main page of Sarkas' repository_

#. In the top right corner of the page, under your account icon, click on **Fork**.

#. Great you have successfully forked Sarkas repository. Now we need to clone it on your local computer.

#. Navigate to your Github page and select your Sarkas repository

#. Above the list of files, click on the green button **Clone**

#. At this point you can either

    * a. Click on **Download ZIP** and save it in the folder where you want to store your copy of Sarkas.
    * b. Copy the link shown

#. Depending on your choice above

        * a. Unzip the folder and enter the ``sarkas-master`` folder. Jump to point 8.
        * b. Open a terminal window and ``cd`` into the folder where you want to store your copy of Sarkas. Then type

        .. code-block:: bash

            $ git clone https://github.com/murillo-group/sarkas.git

#. At this point you can choose to

    #. Create a virtual environment for you work
    #. Use the docker image
    #. Manually install all the required packages

.. note::
    We strongly suggest Option 1.

Option 1: Virtual environment
-----------------------------
It is good practice to create virtual environment for your each of your programming projects. Below are instructions
for creating the ``sarkas`` virtual environment.

#. Enter the unzipped folder ``sarkas-master`` and open a terminal window (or command prompt in Windows).

#. Check if you have ``conda`` installed

    .. code-block:: bash

        $ which conda

    This command will print the path of your ``conda`` binaries. If nothing is printed then you need to install it. Visit
    Anaconda.org and download_ their Python 3.* installer.

#. Create your virtual environment via

    .. code-block:: bash

        $ conda env create -f sarkas_env.yaml

    This command will read the file (``-f`` option) ``sarkas_env.yaml`` which contains all the necessary packages for
    running Sarkas. It will create the virtual environment ``sarkas`` in the ``envs`` directory of your conda directory
    (the one printed above by the command ``which``).

#. Once the enviroment has been created you can activate it by

    .. code-block:: bash

        $ conda activate sarkas

    and deactivate it by

    .. code-block:: bash

        $ conda deactivate

#. Once the environment has been activated you can install Sarkas in Development mode via

    .. code-block:: bash

        $ pip install -e .

    .. note::
        Don't forget the final dot ``.`` after ``-e`` as that is the location the ``pip`` will look for a ``setup.py``

    The development mode is useful so that you don't need to reinstall Sarkas everytime you change something in the source code.
    In more detail, ``pip`` will create a symlink to Sarkas' files in this folder, instead of copying the source code
    in your python directory.

    For example: If you are using Anaconda the path to the directory will look something like this
    ``path_to_directory/anaconda3/envs/sarkas/lib/python3.7/site-packages/``. In here you will find ``sarkas-md.egg-link``
    if in development mode or ``sarkas_md-0.1.0-py3.7.egg`` if default installation. Note that the ``0-1-0-py3.7``
    refers to Sarkas version and python version.

Option 2: Docker Image
----------------------
Alternatively, you can install the whole sarkas package including all dependencies/preliminary-packages using Docker_.
To install Sarkas using Docker, run the following commands:

.. code-block:: bash

   $ cd sarkas
   $ docker build -t sarkas -f Docker/Dockerfile .

Once you install Sarkas using Docker, you can go inside the Docker container by running the following:

.. code-block:: bash

   $ docker run -u 0 -it sarkas bash

.. _Docker: https://www.docker.com/products/docker-desktop

Option 3: Manual installation
-----------------------------
If you don't have a version of Python 3.* installed, visit Anaconda_ and download_ their Python 3.* installer.
Then jump back to Option 1.

If you have Python 3.* installed jump back to Option 1.


Setup your Git
==============

Updating Documentation
======================
Here are the steps for compiling the documentation

    #. Make changes to the documentation by creating new ``.rst`` files or ``.ipynb`` notebooks.

    #. Enter the ``docs`` folder in your Sarkas repo. For example ``sarkas-master/docs``.

    #. Open a terminal window and run the following

    .. code-block:: bash

        $ make clean
        $ make html

    The first command will remove all the content in ``_build/html``. This command is not necessary, but suggested
    so to avoid any conflicts.

    The second command update the documentation with your changes and place the files in the folder ``_build/html``.
    Fix any Error and/or Warning messages. You might need to run the command few times.
    You can ignore warnings about duplicate citations.

    #. Now you need to copy all the content of the ``_build/html`` folder into ``docs``.
    On Unix system run the command

    .. code-block:: bash

        $ cp -rf _build/html/* .

    On Windows run

    .. code-block:: bash

        $ cp -rf _build\\html\\* .

    #. Check the changes in the Documentation by opening the any of the update/new ``.html`` files using a browser.

Congratulations! The Documentation is up to date.


.. _Anaconda: https://www.anaconda.org
.. _repository: https://github.com/murillo-group/sarkas-repo
.. _fork: https://docs.github.com/en/github/getting-started-with-github/fork-a-repo
.. _clone: https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository
.. _download: https://www.anaconda.com/products/individual